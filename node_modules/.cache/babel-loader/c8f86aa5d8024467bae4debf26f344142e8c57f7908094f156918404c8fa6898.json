{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment() {},\n    decrement() {},\n    increase() {},\n    toggleCounter() {}\n  }\n});\nconst storeReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      ...state,\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      ...state,\n      counter: state.counter - 1\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      ...state,\n      counter: state.counter + action.payload.amount\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      ...state,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(storeReducer);\nexport default store;","map":{"version":3,"names":["createSlice","createStore","initialState","counter","showCounter","name","reducers","increment","decrement","increase","toggleCounter","storeReducer","state","action","type","payload","amount","store"],"sources":["/Users/maria.rusakova/Documents/learning/react-udemy-max-schwarz/redux/src/store/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment() {},\n    decrement() {},\n    increase() {},\n    toggleCounter() {},\n  },\n});\n\nconst storeReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      ...state,\n      counter: state.counter + 1,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      ...state,\n      counter: state.counter - 1,\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      ...state,\n      counter: state.counter + action.payload.amount,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      ...state,\n      showCounter: !state.showCounter,\n    };\n  }\n  return state;\n};\n\nconst store = createStore(storeReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDJ,WAAW,CAAC;EACVK,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG,CAAC,CAAC;IACdC,SAASA,CAAA,EAAG,CAAC,CAAC;IACdC,QAAQA,CAAA,EAAG,CAAC,CAAC;IACbC,aAAaA,CAAA,EAAG,CAAC;EACnB;AACF,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGV,YAAY,EAAEW,MAAM,KAAK;EACrD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACL,GAAGF,KAAK;MACRT,OAAO,EAAES,KAAK,CAACT,OAAO,GAAG;IAC3B,CAAC;EACH;EAEA,IAAIU,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACL,GAAGF,KAAK;MACRT,OAAO,EAAES,KAAK,CAACT,OAAO,GAAG;IAC3B,CAAC;EACH;EAEA,IAAIU,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACL,GAAGF,KAAK;MACRT,OAAO,EAAES,KAAK,CAACT,OAAO,GAAGU,MAAM,CAACE,OAAO,CAACC;IAC1C,CAAC;EACH;EAEA,IAAIH,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACL,GAAGF,KAAK;MACRR,WAAW,EAAE,CAACQ,KAAK,CAACR;IACtB,CAAC;EACH;EACA,OAAOQ,KAAK;AACd,CAAC;AAED,MAAMK,KAAK,GAAGhB,WAAW,CAACU,YAAY,CAAC;AAEvC,eAAeM,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}