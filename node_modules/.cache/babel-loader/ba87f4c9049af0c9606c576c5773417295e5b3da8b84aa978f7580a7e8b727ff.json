{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      !state.showCounter;\n    }\n  }\n});\nconst storeReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      ...state,\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      ...state,\n      counter: state.counter - 1\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      ...state,\n      counter: state.counter + action.payload.amount\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      ...state,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(storeReducer);\nexport default store;","map":{"version":3,"names":["createSlice","createStore","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","storeReducer","type","payload","store"],"sources":["/Users/maria.rusakova/Documents/learning/react-udemy-max-schwarz/redux/src/store/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      !state.showCounter;\n    },\n  },\n});\n\nconst storeReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      ...state,\n      counter: state.counter + 1,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      ...state,\n      counter: state.counter - 1,\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      ...state,\n      counter: state.counter + action.payload.amount,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      ...state,\n      showCounter: !state.showCounter,\n    };\n  }\n  return state;\n};\n\nconst store = createStore(storeReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDJ,WAAW,CAAC;EACVK,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDO,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACL,OAAO,GAAGK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnB,CAACA,KAAK,CAACJ,WAAW;IACpB;EACF;AACF,CAAC,CAAC;AAEF,MAAMU,YAAY,GAAGA,CAACN,KAAK,GAAGN,YAAY,EAAES,MAAM,KAAK;EACrD,IAAIA,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACL,GAAGP,KAAK;MACRL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG;IAC3B,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACL,GAAGP,KAAK;MACRL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG;IAC3B,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACI,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACL,GAAGP,KAAK;MACRL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACK,OAAO,CAACJ;IAC1C,CAAC;EACH;EAEA,IAAID,MAAM,CAACI,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACL,GAAGP,KAAK;MACRJ,WAAW,EAAE,CAACI,KAAK,CAACJ;IACtB,CAAC;EACH;EACA,OAAOI,KAAK;AACd,CAAC;AAED,MAAMS,KAAK,GAAGhB,WAAW,CAACa,YAAY,CAAC;AAEvC,eAAeG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}